INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:26 Make GET request to  http://localhost:8000/api/v1/courses?userId=3391cfe9-bbd1-4446-b27f-bf0bae12799f
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/courses?userId=3391cfe9-bbd1-4446-b27f-bf0bae12799f
INFO     BASE_ASSERTIONS:base.py:10 Check that response status code equal 200
INFO     COURSE_ASSERTIONS:course.py:53 Check get course response
INFO     BASE_ASSERTIONS:base.py:44 Check that 'courses' length equals to [CreateCourseResponseSchema(course=CourseSchema(id='bc75f248-bd22-4076-9070-c304214523a6', title='Издали вздрогнуть ботинок угроза.', max_score=85, min_score=39, description='Совет проход научить горький командующий. Скользить горький хотеть выдержать.', estimated_time='9 weeks', preview_file=FileSchema(id='dc50f2b9-75fd-441e-9d37-a35fa5e8a91c', url=HttpUrl('http://localhost:8000/static/tests/0a21abcd-49f2-4bb3-81dc-bd487a69a5ad.png'), filename='0a21abcd-49f2-4bb3-81dc-bd487a69a5ad.png', directory='tests'), created_by_user=UserSchema(id='3391cfe9-bbd1-4446-b27f-bf0bae12799f', email='denisjakovlev@example.net', first_name='Капитон', last_name='Быков', middle_name='Зоя')))]
INFO     COURSE_ASSERTIONS:course.py:40 Check course
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to bc75f248-bd22-4076-9070-c304214523a6
INFO     BASE_ASSERTIONS:base.py:19 Check that 'title' equals to Издали вздрогнуть ботинок угроза.
INFO     BASE_ASSERTIONS:base.py:19 Check that 'max_score' equals to 85
INFO     BASE_ASSERTIONS:base.py:19 Check that 'min_score' equals to 39
INFO     BASE_ASSERTIONS:base.py:19 Check that 'description' equals to Совет проход научить горький командующий. Скользить горький хотеть выдержать.
INFO     BASE_ASSERTIONS:base.py:19 Check that 'estimated_time' equals to 9 weeks
INFO     FILE_ASSERTIONS:files.py:29 Check file
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to dc50f2b9-75fd-441e-9d37-a35fa5e8a91c
INFO     BASE_ASSERTIONS:base.py:19 Check that 'url' equals to http://localhost:8000/static/tests/0a21abcd-49f2-4bb3-81dc-bd487a69a5ad.png
INFO     BASE_ASSERTIONS:base.py:19 Check that 'filename' equals to 0a21abcd-49f2-4bb3-81dc-bd487a69a5ad.png
INFO     BASE_ASSERTIONS:base.py:19 Check that 'directory' equals to tests
INFO     USER_ASSERTIONS:users.py:19 Check user
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to 3391cfe9-bbd1-4446-b27f-bf0bae12799f
INFO     BASE_ASSERTIONS:base.py:19 Check that 'email' equals to denisjakovlev@example.net
INFO     BASE_ASSERTIONS:base.py:19 Check that 'first_name' equals to Капитон
INFO     BASE_ASSERTIONS:base.py:19 Check that 'last_name' equals to Быков
INFO     BASE_ASSERTIONS:base.py:19 Check that 'middle_name' equals to Зоя
INFO     SCHEMA_ASSERTIONS:schema.py:19 Validating json schema