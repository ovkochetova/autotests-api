INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:26 Make GET request to  http://localhost:8000/api/v1/courses?userId=93017360-6fbd-40d9-adaa-c0f4137e5260
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/courses?userId=93017360-6fbd-40d9-adaa-c0f4137e5260
INFO     BASE_ASSERTIONS:base.py:10 Check that response status code equal 200
INFO     COURSE_ASSERTIONS:course.py:53 Check get course response
INFO     BASE_ASSERTIONS:base.py:44 Check that 'courses' length equals to [CreateCourseResponseSchema(course=CourseSchema(id='c3a92301-f046-4699-a4c5-2c50f2c24c73', title='Пища провал ребятишки лапа вчера цепочка мелькнуть роса.', max_score=77, min_score=5, description='Находить юный академик рот полностью сбросить. Госпожа грустный зачем юный.', estimated_time='8 weeks', preview_file=FileSchema(id='05a9c0db-c10e-4152-81f8-7fa7a9a78dec', url=HttpUrl('http://localhost:8000/static/tests/06075c15-1974-48c8-8140-f32ae3c686df.png'), filename='06075c15-1974-48c8-8140-f32ae3c686df.png', directory='tests'), created_by_user=UserSchema(id='93017360-6fbd-40d9-adaa-c0f4137e5260', email='xbelozerova@example.net', first_name='Творимир', last_name='Бобылев', middle_name='Полина')))]
INFO     COURSE_ASSERTIONS:course.py:40 Check course
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to c3a92301-f046-4699-a4c5-2c50f2c24c73
INFO     BASE_ASSERTIONS:base.py:19 Check that 'title' equals to Пища провал ребятишки лапа вчера цепочка мелькнуть роса.
INFO     BASE_ASSERTIONS:base.py:19 Check that 'max_score' equals to 77
INFO     BASE_ASSERTIONS:base.py:19 Check that 'min_score' equals to 5
INFO     BASE_ASSERTIONS:base.py:19 Check that 'description' equals to Находить юный академик рот полностью сбросить. Госпожа грустный зачем юный.
INFO     BASE_ASSERTIONS:base.py:19 Check that 'estimated_time' equals to 8 weeks
INFO     FILE_ASSERTIONS:files.py:29 Check file
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to 05a9c0db-c10e-4152-81f8-7fa7a9a78dec
INFO     BASE_ASSERTIONS:base.py:19 Check that 'url' equals to http://localhost:8000/static/tests/06075c15-1974-48c8-8140-f32ae3c686df.png
INFO     BASE_ASSERTIONS:base.py:19 Check that 'filename' equals to 06075c15-1974-48c8-8140-f32ae3c686df.png
INFO     BASE_ASSERTIONS:base.py:19 Check that 'directory' equals to tests
INFO     USER_ASSERTIONS:users.py:19 Check user
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to 93017360-6fbd-40d9-adaa-c0f4137e5260
INFO     BASE_ASSERTIONS:base.py:19 Check that 'email' equals to xbelozerova@example.net
INFO     BASE_ASSERTIONS:base.py:19 Check that 'first_name' equals to Творимир
INFO     BASE_ASSERTIONS:base.py:19 Check that 'last_name' equals to Бобылев
INFO     BASE_ASSERTIONS:base.py:19 Check that 'middle_name' equals to Полина
INFO     SCHEMA_ASSERTIONS:schema.py:19 Validating json schema