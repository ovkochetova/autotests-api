INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:26 Make GET request to  http://localhost:8000/api/v1/courses?userId=e8372f2b-c531-4e58-9411-feadd03a6000
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/courses?userId=e8372f2b-c531-4e58-9411-feadd03a6000
INFO     BASE_ASSERTIONS:base.py:10 Check that response status code equal 200
INFO     COURSE_ASSERTIONS:course.py:53 Check get course response
INFO     BASE_ASSERTIONS:base.py:44 Check that 'courses' length equals to [CreateCourseResponseSchema(course=CourseSchema(id='7bd33268-a6bb-4c08-834c-54da97e76145', title='Багровый постоянный исполнять висеть.', max_score=71, min_score=35, description='Место сынок плод. Художественный расстегнуть военный команда смелый потрясти.\nБровь выразить цвет рот. Столетие доставать район. Райком ботинок наткнуться плод палка.', estimated_time='6 weeks', preview_file=FileSchema(id='968301fe-aa81-4396-a55d-f219593bed67', url=HttpUrl('http://localhost:8000/static/tests/c5ac4a31-f7a9-4c17-82ad-d7ec549a9a51.png'), filename='c5ac4a31-f7a9-4c17-82ad-d7ec549a9a51.png', directory='tests'), created_by_user=UserSchema(id='e8372f2b-c531-4e58-9411-feadd03a6000', email='volkovgennadi@example.org', first_name='Владимир', last_name='Кононов', middle_name='Дементий')))]
INFO     COURSE_ASSERTIONS:course.py:40 Check course
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to 7bd33268-a6bb-4c08-834c-54da97e76145
INFO     BASE_ASSERTIONS:base.py:19 Check that 'title' equals to Багровый постоянный исполнять висеть.
INFO     BASE_ASSERTIONS:base.py:19 Check that 'max_score' equals to 71
INFO     BASE_ASSERTIONS:base.py:19 Check that 'min_score' equals to 35
INFO     BASE_ASSERTIONS:base.py:19 Check that 'description' equals to Место сынок плод. Художественный расстегнуть военный команда смелый потрясти.
Бровь выразить цвет рот. Столетие доставать район. Райком ботинок наткнуться плод палка.
INFO     BASE_ASSERTIONS:base.py:19 Check that 'estimated_time' equals to 6 weeks
INFO     FILE_ASSERTIONS:files.py:29 Check file
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to 968301fe-aa81-4396-a55d-f219593bed67
INFO     BASE_ASSERTIONS:base.py:19 Check that 'url' equals to http://localhost:8000/static/tests/c5ac4a31-f7a9-4c17-82ad-d7ec549a9a51.png
INFO     BASE_ASSERTIONS:base.py:19 Check that 'filename' equals to c5ac4a31-f7a9-4c17-82ad-d7ec549a9a51.png
INFO     BASE_ASSERTIONS:base.py:19 Check that 'directory' equals to tests
INFO     USER_ASSERTIONS:users.py:19 Check user
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to e8372f2b-c531-4e58-9411-feadd03a6000
INFO     BASE_ASSERTIONS:base.py:19 Check that 'email' equals to volkovgennadi@example.org
INFO     BASE_ASSERTIONS:base.py:19 Check that 'first_name' equals to Владимир
INFO     BASE_ASSERTIONS:base.py:19 Check that 'last_name' equals to Кононов
INFO     BASE_ASSERTIONS:base.py:19 Check that 'middle_name' equals to Дементий
INFO     SCHEMA_ASSERTIONS:schema.py:19 Validating json schema