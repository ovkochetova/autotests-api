INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/users
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/authentication/login
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/files
INFO     HTTP_LOGGER:event_hooks.py:26 Make POST request to  http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/courses
INFO     HTTP_LOGGER:event_hooks.py:26 Make GET request to  http://localhost:8000/api/v1/courses?userId=14647c49-33f9-4267-b8e7-96634f0bc79c
INFO     HTTP_LOGGER:event_hooks.py:34 GOT 200 response to  OK from http://localhost:8000/api/v1/courses?userId=14647c49-33f9-4267-b8e7-96634f0bc79c
INFO     BASE_ASSERTIONS:base.py:10 Check that response status code equal 200
INFO     COURSE_ASSERTIONS:course.py:53 Check get course response
INFO     BASE_ASSERTIONS:base.py:44 Check that 'courses' length equals to [CreateCourseResponseSchema(course=CourseSchema(id='357d7d79-a28c-4509-b6c8-8d411dfafed0', title='Невыносимый висеть поговорить.', max_score=86, min_score=3, description='Ведь смертельный полевой сверкать полевой.\nБанк труп непривычный доставать. Вчера бабочка хотеть заложить слать гулять тревога.', estimated_time='5 weeks', preview_file=FileSchema(id='adbde210-8f6f-4e2f-8e4c-483f838e8acd', url=HttpUrl('http://localhost:8000/static/tests/ef4acc47-ab7a-42df-a134-3c6bd90db7a2.png'), filename='ef4acc47-ab7a-42df-a134-3c6bd90db7a2.png', directory='tests'), created_by_user=UserSchema(id='14647c49-33f9-4267-b8e7-96634f0bc79c', email='jpanfilov@example.net', first_name='Филипп', last_name='Петров', middle_name='Милица')))]
INFO     COURSE_ASSERTIONS:course.py:40 Check course
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to 357d7d79-a28c-4509-b6c8-8d411dfafed0
INFO     BASE_ASSERTIONS:base.py:19 Check that 'title' equals to Невыносимый висеть поговорить.
INFO     BASE_ASSERTIONS:base.py:19 Check that 'max_score' equals to 86
INFO     BASE_ASSERTIONS:base.py:19 Check that 'min_score' equals to 3
INFO     BASE_ASSERTIONS:base.py:19 Check that 'description' equals to Ведь смертельный полевой сверкать полевой.
Банк труп непривычный доставать. Вчера бабочка хотеть заложить слать гулять тревога.
INFO     BASE_ASSERTIONS:base.py:19 Check that 'estimated_time' equals to 5 weeks
INFO     FILE_ASSERTIONS:files.py:29 Check file
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to adbde210-8f6f-4e2f-8e4c-483f838e8acd
INFO     BASE_ASSERTIONS:base.py:19 Check that 'url' equals to http://localhost:8000/static/tests/ef4acc47-ab7a-42df-a134-3c6bd90db7a2.png
INFO     BASE_ASSERTIONS:base.py:19 Check that 'filename' equals to ef4acc47-ab7a-42df-a134-3c6bd90db7a2.png
INFO     BASE_ASSERTIONS:base.py:19 Check that 'directory' equals to tests
INFO     USER_ASSERTIONS:users.py:19 Check user
INFO     BASE_ASSERTIONS:base.py:19 Check that 'id' equals to 14647c49-33f9-4267-b8e7-96634f0bc79c
INFO     BASE_ASSERTIONS:base.py:19 Check that 'email' equals to jpanfilov@example.net
INFO     BASE_ASSERTIONS:base.py:19 Check that 'first_name' equals to Филипп
INFO     BASE_ASSERTIONS:base.py:19 Check that 'last_name' equals to Петров
INFO     BASE_ASSERTIONS:base.py:19 Check that 'middle_name' equals to Милица
INFO     SCHEMA_ASSERTIONS:schema.py:19 Validating json schema